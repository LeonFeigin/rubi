plugins {
    id 'fabric-loom' version '1.10.1'
    id 'maven-publish'
}

version = project.mod_version + '+' + project.minecraft_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

configurations {
    modIncludeImplementation

    include.extendsFrom modIncludeImplementation
    modImplementation.extendsFrom modIncludeImplementation
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modIncludeImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
}

loom {
    accessWidenerPath = file("src/main/resources/rubi.accesswidener")
}

processResources {
    inputs.property "version", project.version
    inputs.property "fabricloader", project.loader_version
    inputs.property "minecraft", project.minecraft_range

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
            "fabricloader": project.loader_version,
            "minecraft": project.minecraft_range
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}-${project.base.archivesName.get()}" }
    }
}
